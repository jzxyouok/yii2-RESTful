<?php

namespace app\modules\v1\models;

use Yii;
use yii\base\Exception;
use yii\base\Model;
use app\models\User;

/**
 * LoginForm is the model behind the login form.
 *
 * @property User|null $user This property is read-only.
 *
 */
class LoginForm extends Model
{
    //self场景登录所需参数
    public $phone;
    public $password;
    //Oauth2登录所需参数
    /*public $Oauth2;
    public $UserAttributes;*/
    //共用参数
    public $rememberMe = true;

    private $_user = null;

    public function setScenario($value)
    {
        $Scenario = parent::setScenario($value); // TODO: Change the autogenerated stub
        $Scenario['login'] = ['phone', 'password', 'rememberMe'];
        $Scenario['register'] = ['phone', 'password'];
        /*$Scenario['Oauth2'] = ['Oauth2', 'UserAttributes'];*/

        return $Scenario;
    }

    /**
     * @return array the validation rules.
     */
    public function rules()
    {
        return [
            // 所有场景通用
            [['phone'], 'match', 'pattern' => "/^1(3[0-9]|4[57]|5[0-35-9]|8[0-9]|70)\\d{8}$/", 'message' => '请输入正确的手机号.'],
            // 当前系统登录规则
            [['phone', 'password'], 'required', 'on' => 'login'],
            ['password', 'validatePassword', 'on' => 'login'],
            // 当前系统注册规则
            [['phone', 'password'], 'required', 'on' => 'register'],
            ['phone', 'validatePhone', 'on' => 'register'],
            // Oauth2登录规则
            /*[['Oauth2', 'UserAttributes'], 'required', 'on' => 'Oauth2'],
            ['Oauth2', 'in', 'range' => ['github', 'qq']]//支持github、qq*/
            ['rememberMe', 'boolean', 'on' => 'login'],
        ];
    }

    /**
     * 用户登录时验证密码的有效性
     *
     * @param string $attribute the attribute currently being validated
     * @param array $params the additional name-value pairs given in the rule
     */
    public function validatePassword($attribute, $params)
    {
        if (!$this->hasErrors()) {
            $user = User::findOne(['phone' => $this->phone]);//查找用户信息
            if (!$user || !$user->validatePassword($this->password)) {
                $this->addError($attribute, '账号或密码错误.');
            }
        }
    }

    /**
     * 用户注册时验证手机号的有效性
     *
     * @param string $attribute the attribute currently being validated
     * @param array $params the additional name-value pairs given in the rule
     */
    public function validatePhone($attribute, $params)
    {
        if (!$this->hasErrors()) {
            $user = User::findOne(['phone' => $this->phone]);//查找用户信息
            if ($user) {
                $this->addError($attribute, '当前手机号已被占用.');
            }
        }
    }

    /**
     * Logs in a user using the provided username and password.
     * @return bool whether the user is logged in successfully
     */
    public function login()
    {
        if ($this->validate()) {
            $user = User::findOne(['phone' => $this->phone]);//查找用户信息
            $this->_user = $user;
            $user->last_login_at = time();
            $user->last_login_ip = Yii::$app->request->getUserIP();
            $user->save();
            return $this->_user;
        }
        return false;
    }

    /**
     * 用户注册
     */
    public function register()
    {
        $connection = Yii::$app->db;//获取数据库连接
        $transaction = $connection->beginTransaction();//启动事务
        try {
            $user = new User();
            $user->username = Yii::$app->security->generateRandomString(8);//用户名
            $user->access_token = Yii::$app->security->generateRandomString();//access_token
            $user->phone = $this->phone;//手机号
            $user->password_hash = Yii::$app->getSecurity()->generatePasswordHash($this->password);//密码
            $time = time();//获取时间戳
            $user->created_at = $time;//注册时间
            $user->updated_at = $time;//修改时间
            $user->save();//数据生成
            $transaction->commit();//提交事务
        } catch (Exception $e) {
            $transaction->rollBack();//回滚事务
            return false;
        }
        return User::findOne(['phone' => $this->phone]);//查找用户信息;
    }

    /**
     * Oauth2 登录
     * @return bool whether the user is logged in successfully
     */
    /*public function loginOauth2()
    {
        if ($this->validate()) {
            $User = new User();
            $this->_user = $User->findOne([
                'oauth2' => $this->Oauth2,//登录类型
                'oauth2_id' => $this->UserAttributes['id']//用户对应登录系统id
            ]);//查找用户信息

            if (empty($this->_user)) {//当用户未收录
                switch ($this->Oauth2) {
                    case 'github':
                        $User->oauth2 = $this->Oauth2;//登录类型
                        $User->oauth2_id = $this->UserAttributes['id'];//用户对应登录系统id
                        $User->username = $this->UserAttributes['login'];//用户名
                        $User->head = $this->UserAttributes['avatar_url'];//头像
                        $User->email = $this->UserAttributes['email'];//邮箱
                        $User->created_at = time();//创建时间
                        $User->save();//收录用户数据
                        $this->_user = $User->findOne([
                            'oauth2' => $this->Oauth2,//登录类型
                            'oauth2_id' => $this->UserAttributes['id']//用户对应登录系统id
                        ]);//查找用户信息
                        break;
                }
            }

            return $this->_user;
        }
    }*/
}
