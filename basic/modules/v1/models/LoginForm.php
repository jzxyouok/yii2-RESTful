<?php

namespace app\modules\v1\models;

use Yii;
use yii\base\Model;

/**
 * LoginForm is the model behind the login form.
 *
 * @property User|null $user This property is read-only.
 *
 */
class LoginForm extends Model
{
    //self场景登录所需参数
    public $username;
    public $password;
    //Oauth2登录所需参数
    public $Oauth2;
    public $UserAttributes;
    //共用参数
    public $rememberMe = true;

    private $_user = null;

    public function setScenario($value)
    {
        $Scenario = parent::setScenario($value); // TODO: Change the autogenerated stub
        $Scenario['self'] = ['username', 'password', 'rememberMe'];
        $Scenario['Oauth2'] = ['Oauth2', 'UserAttributes'];

        return $Scenario;
    }

    /**
     * @return array the validation rules.
     */
    public function rules()
    {
        return [
            // 当前系统登录规则
            [['username', 'password'], 'required', 'on' => 'self'],
            ['rememberMe', 'boolean', 'on' => 'self'],
            ['password', 'validatePassword', 'on' => 'self'],
            // Oauth2登录规则
            [['Oauth2', 'UserAttributes'], 'required', 'on' => 'Oauth2'],
            ['Oauth2', 'in', 'range' => ['github', 'qq']]//支持github、qq
        ];
    }

    /**
     * Validates the password.
     * This method serves as the inline validation for password.
     *
     * @param string $attribute the attribute currently being validated
     * @param array $params the additional name-value pairs given in the rule
     */
    public function validatePassword($attribute, $params)
    {
        if (!$this->hasErrors()) {
            $user = $this->getUser();
            if (!$user || !$user->validatePassword($this->password)) {
                $this->addError($attribute, 'Incorrect username or password.');
            }
        }
    }

    /**
     * Logs in a user using the provided username and password.
     * @return bool whether the user is logged in successfully
     */
    public function login()
    {
        if ($this->validate()) {
            $this->_user = User::findOne([
                'oauth2' => $this->Oauth2,//登录类型
            ]);//查找用户信息
            return Yii::$app->user->login($this->getUser(), $this->rememberMe ? 3600 * 24 * 30 : 0);
        }
        return false;
    }

    /**
     * Oauth2 登录
     * @return bool whether the user is logged in successfully
     */
    public function loginOauth2()
    {
        if ($this->validate()) {
            $User = new User();
            $this->_user = $User->findOne([
                'oauth2' => $this->Oauth2,//登录类型
                'oauth2_id' => $this->UserAttributes['id']//用户对应登录系统id
            ]);//查找用户信息

            if (empty($this->_user)) {//当用户未收录
                switch ($this->Oauth2) {
                    case 'github':
                        $User->oauth2 = $this->Oauth2;//登录类型
                        $User->oauth2_id = $this->UserAttributes['id'];//用户对应登录系统id
                        $User->username = $this->UserAttributes['login'];//用户名
                        $User->head = $this->UserAttributes['avatar_url'];//头像
                        $User->email = $this->UserAttributes['email'];//邮箱
                        $User->created_at = time();//创建时间
                        $User->save();//收录用户数据
                        $this->_user = $User->findOne([
                            'oauth2' => $this->Oauth2,//登录类型
                            'oauth2_id' => $this->UserAttributes['id']//用户对应登录系统id
                        ]);//查找用户信息
                        break;
                }
            }

            return $this->_user;
//            return Yii::$app->user->login($this->_user, $this->rememberMe ? 3600 * 24 * 30 : 0);
        }
    }
}
